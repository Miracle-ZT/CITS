<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
  	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
 	 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <context:component-scan base-package="sfw.xmut">
<!--        <context:include-filter type="annotation"-->
<!--                                expression="org.springframework.stereotype.Component" />-->
<!--        <context:include-filter type="annotation"-->
<!--                                expression="org.springframework.stereotype.Repository" />-->
<!--        <context:include-filter type="annotation"-->
<!--                                expression="org.springframework.stereotype.Service" />-->
    </context:component-scan>

    <!-- 加载配数据源配置文件 db.properties -->
    <context:property-placeholder location="classpath:db.properties" />


    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- spring 通过 sqlSessionFactoryBean 获取 sqlSessionFactory 工厂类 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 扫描 po 包，使用别名 -->
        <property name="typeAliasesPackage" value="sfw.xmut.pojo"></property>
        <!--开启驼峰映射 默认false-->
        <!--将数据库中字段的下划线去掉并加上后续单词的首字母大写 再将此文本用于pojo类中对象属性的匹配-->

        <!-- 开启日志 -->
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
                <property name="logImpl" value="org.apache.ibatis.logging.stdout.StdOutImpl"/>
            </bean>
        </property>

        <!--配置分页助手-->
        <property name="plugins">
            <array>
                <!-- 引入插件类型 -->
                <bean class="com.github.pagehelper.PageInterceptor">
                    <!-- 指定使用的数据库-->
                    <property name="properties">
                        <!--因为分页插件支持多种数据库,需指明当前所用数据库 ,helperDialect  mysql数据库(方言)-->
                        <props>
                            <prop key="helperDialect"></prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>

        <!-- 扫描映射文件 -->
<!--        <property name="mapperLocations" value="classpath:sfw/xmut/dao/*.xml"></property>-->
    </bean>

    <!-- 配置扫描 dao 包，动态实现 dao 接口，注入到 spring 容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="sfw.xmut.dao" />
        <!-- 注意使用 sqlSessionFactoryBeanName 避免出现spring 扫描组件失效问题 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>


    <!-- 事务管理器对象 id必须叫做transactionManager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 启动声明式事务驱动 -->
    <tx:annotation-driven transaction-manager="transactionManager" />



<!--    <bean id="gson" class="com.google.gson.Gson" scope="prototype"></bean>-->

</beans>